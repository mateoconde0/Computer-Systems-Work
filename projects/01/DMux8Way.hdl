// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/01/DMux8Way.hdl

/**
 * 8-way demultiplexor:
 * {a, b, c, d, e, f, g, h} = {in, 0, 0, 0, 0, 0, 0, 0} if sel == 000
 *                            {0, in, 0, 0, 0, 0, 0, 0} if sel == 001
 *                            etc.
 *                            {0, 0, 0, 0, 0, 0, 0, in} if sel == 111
 */

CHIP DMux8Way {
    IN in, sel[3];
    OUT a, b, c, d, e, f, g, h;

    PARTS:
    // Put your code here:
	Not(in=sel[2],out=notSel3);
	DMux4Way(in=in,sel=sel[0..1],a=aPrime,b=bPrime,c=cPrime,d=dPrime);
	DMux4Way(in=in,sel=sel[0..1],a=ePrime,b=fPrime,c=gPrime,d=hPrime);
	And(a=aPrime,b=notSel3,out=a);
	And(a=bPrime,b=notSel3,out=b);
	And(a=cPrime,b=notSel3,out=c);
	And(a=dPrime,b=notSel3,out=d);
	And(a=ePrime,b=sel[2],out=e);
	And(a=fPrime,b=sel[2],out=f);
	And(a=gPrime,b=sel[2],out=g);
	And(a=hPrime,b=sel[2],out=h);
}